name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    outputs:
      VERSION_NUMBER: ${{ steps.output.outputs.VERSION_NUMBER }}
      CI_CREATE_IMAGE: ${{ steps.output.outputs.CI_CREATE_IMAGE }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm --package semantic-release@23 --package @semantic-release/exec --package @semantic-release/changelog --package conventional-changelog-conventionalcommits@7.0.2 dlx semantic-release
      - name: Generate output
        id: output
        run: test -f "release.env" && cat release.env >> "$GITHUB_OUTPUT" || exit 0
  docker:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.CI_CREATE_IMAGE == 'true' }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Build and push UI
        uses: docker/build-push-action@v6
        with:
          context: ./ui
          push: true
          tags: "${{ vars.DOCKERHUB_USERNAME }}/thrifty-ui:latest, ${{ vars.DOCKERHUB_USERNAME }}/thrifty-ui:${{ needs.release.outputs.VERSION_NUMBER }}"
      - name: Build and push API
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: "${{ vars.DOCKERHUB_USERNAME }}/thrifty-api:latest, ${{ vars.DOCKERHUB_USERNAME }}/thrifty-api:${{ needs.release.outputs.VERSION_NUMBER }}"
